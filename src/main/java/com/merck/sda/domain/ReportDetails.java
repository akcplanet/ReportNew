package com.merck.sda.domain;

import java.io.Serializable;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.GenericGenerator;

import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * EventDetails generated by hbm2java
 */
/*@Entity
@Table(name = "event_details", catalog = "outreach")*/
@JsonAutoDetect(getterVisibility = JsonAutoDetect.Visibility.ANY, fieldVisibility = JsonAutoDetect.Visibility.NONE)
public class ReportDetails extends BaseModel<String> implements Serializable {

	private static final long serialVersionUID = 1L;

	private String activity;
	private String council;
	private String eventType;
	private String pocDetailsByPoc2Id;
	private String pocDetailsByPoc1Id;
	private String pocDetailsByPoc3Id;
	private String schoolDetails;
	private Date eventDate;
	private String eventDesc;
	private String totalHrs;
	private String noOfLivesImpct;

	@Id
	@Column(name = "id")
	@GeneratedValue(generator = "system-uuid")
	@GenericGenerator(name = "system-uuid", strategy = "uuid")
	@JsonProperty("id")
	public String getPrimaryKey() {
		return this.primaryKey;
	}

	public void setPrimaryKey(String primaryKey) {
		this.primaryKey = primaryKey;
	}

/*	@ManyToOne(optional = false)
	@JoinColumn(name = "activity_id")*/
	public String getActivity() {
		return this.activity;
	}

	public void setActivity(String activity) {
		this.activity = activity;
	}

/*	@ManyToOne(optional = false)
	@JoinColumn(name = "council_id")*/
	public String getCouncil() {
		return this.council;
	}

	public void setCouncil(String council) {
		this.council = council;
	}

/*	@ManyToOne(optional = false)
	@JoinColumn(name = "type_of_event")*/
	public String getEventType() {
		return this.eventType;
	}

	public void setEventType(String eventType) {
		this.eventType = eventType;
	}


	public String getPocDetailsByPoc2Id() {
		return this.pocDetailsByPoc2Id;
	}

	public void setPocDetailsByPoc2Id(String pocDetailsByPoc2Id) {
		this.pocDetailsByPoc2Id = pocDetailsByPoc2Id;
	}

	public String getPocDetailsByPoc1Id() {
		return this.pocDetailsByPoc1Id;
	}

	public void setPocDetailsByPoc1Id(String pocDetailsByPoc1Id) {
		this.pocDetailsByPoc1Id = pocDetailsByPoc1Id;
	}

	public String getPocDetailsByPoc3Id() {
		return this.pocDetailsByPoc3Id;
	}

	public void setPocDetailsByPoc3Id(String pocDetailsByPoc3Id) {
		this.pocDetailsByPoc3Id = pocDetailsByPoc3Id;
	}

	
	public String getSchoolDetails() {
		return this.schoolDetails;
	}

	public void setSchoolDetails(String schoolDetails) {
		this.schoolDetails = schoolDetails;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "event_date")
	public Date getEventDate() {
		return this.eventDate;
	}

	public void setEventDate(Date eventDate) {
		this.eventDate = eventDate;
	}

	@Column(name = "event_desc", length = 500)
	public String getEventDesc() {
		return this.eventDesc;
	}

	public void setEventDesc(String eventDesc) {
		this.eventDesc = eventDesc;
	}

	@Column(name = "total_hrs", nullable = false, length = 50)
	public String getTotalHrs() {
		return this.totalHrs;
	}

	public void setTotalHrs(String totalHrs) {
		this.totalHrs = totalHrs;
	}

	@Column(name = "no_of_lives_impct")
	public String getNoOfLivesImpct() {
		return this.noOfLivesImpct;
	}

	public void setNoOfLivesImpct(String noOfLivesImpct) {
		this.noOfLivesImpct = noOfLivesImpct;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = super.hashCode();
		result = prime * result + ((activity == null) ? 0 : activity.hashCode());
		result = prime * result + ((council == null) ? 0 : council.hashCode());
		result = prime * result + ((eventDate == null) ? 0 : eventDate.hashCode());
		result = prime * result + ((eventDesc == null) ? 0 : eventDesc.hashCode());
		result = prime * result + ((eventType == null) ? 0 : eventType.hashCode());
		result = prime * result + ((noOfLivesImpct == null) ? 0 : noOfLivesImpct.hashCode());
		result = prime * result + ((pocDetailsByPoc1Id == null) ? 0 : pocDetailsByPoc1Id.hashCode());
		result = prime * result + ((pocDetailsByPoc2Id == null) ? 0 : pocDetailsByPoc2Id.hashCode());
		result = prime * result + ((pocDetailsByPoc3Id == null) ? 0 : pocDetailsByPoc3Id.hashCode());
		result = prime * result + ((schoolDetails == null) ? 0 : schoolDetails.hashCode());
		result = prime * result + ((totalHrs == null) ? 0 : totalHrs.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (!super.equals(obj))
			return false;
		if (getClass() != obj.getClass())
			return false;
		ReportDetails other = (ReportDetails) obj;
		if (activity == null) {
			if (other.activity != null)
				return false;
		} else if (!activity.equals(other.activity))
			return false;
		if (council == null) {
			if (other.council != null)
				return false;
		} else if (!council.equals(other.council))
			return false;
		if (eventDate == null) {
			if (other.eventDate != null)
				return false;
		} else if (!eventDate.equals(other.eventDate))
			return false;
		if (eventDesc == null) {
			if (other.eventDesc != null)
				return false;
		} else if (!eventDesc.equals(other.eventDesc))
			return false;
		if (eventType == null) {
			if (other.eventType != null)
				return false;
		} else if (!eventType.equals(other.eventType))
			return false;
		if (noOfLivesImpct == null) {
			if (other.noOfLivesImpct != null)
				return false;
		} else if (!noOfLivesImpct.equals(other.noOfLivesImpct))
			return false;
		if (pocDetailsByPoc1Id == null) {
			if (other.pocDetailsByPoc1Id != null)
				return false;
		} else if (!pocDetailsByPoc1Id.equals(other.pocDetailsByPoc1Id))
			return false;
		if (pocDetailsByPoc2Id == null) {
			if (other.pocDetailsByPoc2Id != null)
				return false;
		} else if (!pocDetailsByPoc2Id.equals(other.pocDetailsByPoc2Id))
			return false;
		if (pocDetailsByPoc3Id == null) {
			if (other.pocDetailsByPoc3Id != null)
				return false;
		} else if (!pocDetailsByPoc3Id.equals(other.pocDetailsByPoc3Id))
			return false;
		if (schoolDetails == null) {
			if (other.schoolDetails != null)
				return false;
		} else if (!schoolDetails.equals(other.schoolDetails))
			return false;
		if (totalHrs == null) {
			if (other.totalHrs != null)
				return false;
		} else if (!totalHrs.equals(other.totalHrs))
			return false;
		return true;
	}
	
	
	


}
